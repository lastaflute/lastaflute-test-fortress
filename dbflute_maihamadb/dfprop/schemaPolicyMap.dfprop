# /---------------------------------------------------------------------------
# schemaPolicyMap: (Default map:{})
#
# The definition of schema policy.
# You can check your schema as the policy.
# The table and column names are treated as case insensitive.
#
# Example:
# map:{
#     ; tableExceptList = list:{}
#     ; tableTargetList = list:{}
#     ; columnExceptMap = map:{}
#     ; isMainSchemaOnly = false
#     
#     ; wholeMap = map:{
#         ; themeList = list:{ uniqueTableAlias ; sameColumnAliasIfSameColumnName }
#     }
#     ; tableMap = map:{
#         ; themeList = list:{ hasPK ; upperCaseBasis ; identityIfPureIDPK }
#         ; statementList = list:{
#             ; if tableName is $$ALL$$ then fkName is prefix:FK_$$table$$
#         }
#     }
#     ; columnMap = map:{
#         ; themeList = list:{ upperCaseBasis }
#         ; statementList = list:{
#             ; if columnName is suffix:_FLAG then bad
#             ; if columnName is suffix:_FLG then notNull
#             ; if columnName is suffix:_FLG then dbType is INTEGER 
#             ; if columnName is suffix:_FLG then classification 
#         }
#     }
# }
#
# *The line that starts with '#' means comment-out.
#
map:{
    # _/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
    # set your DB design policy here #change_it_first
    # _/_/_/_/_/_/_/_/_/_/
    # *REGION is the example table on maihamadb (that cannot pass identityIfPureIDPK)
    # so remove it and this comment after beginning of your DB design
    ; tableExceptList = list:{ REGION }
    ; tableTargetList = list:{}
    ; columnExceptMap = map:{}
    ; isMainSchemaOnly = false

    ; wholeMap = map:{
        ; themeList = list:{
            ; uniqueTableAlias
            ; sameColumnAliasIfSameColumnName
            ; sameColumnDbTypeIfSameColumnName
            ; sameColumnSizeIfSameColumnName
            ; sameColumnNameIfSameColumnAlias
        }
    }
    ; tableMap = map:{
        ; themeList = list:{
            ; hasPK
            ; hasAlias
            ; hasComment
            ; upperCaseBasis
            ; identityIfPureIDPK
        }
        ; statementList = list:{
            # constraint
            ; if tableName is $$ALL$$ then fkName is prefix:FK_$$table$$
            ; if tableName is $$ALL$$ then indexName is prefix:IX_$$table$$ or prefix:FK_$$table$$
        }
    }
    ; columnMap = map:{
        ; themeList = list:{
            ; hasAlias
            ; upperCaseBasis
        }
        ; statementList = list:{
            # FLG column
            ; if columnName is suffix:_FLAG then bad => should be _FLG
            ; if columnName is suffix:_FLG then notNull
            ; if columnName is suffix:_FLG then dbType is INT
            ; if columnName is suffix:_FLG then classification

            # system column
            ; if columnName is REGISTER_USER then notNull
            ; if columnName is REGISTER_USER then dbType_with_size is VARCHAR(200)
            ; if columnName is UPDATE_USER then notNull
            ; if columnName is UPDATE_USER then dbType_with_size is VARCHAR(200)
            ; if columnName is VERSION_NO then notNull
            ; if columnName is VERSION_NO then dbType is BIGINT
        }
    }
}
# ----------------/
