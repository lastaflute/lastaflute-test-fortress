<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE logback>
<!-- _/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_ -->
<!-- Fortress logging settings for All Environments -->
<!-- _/_/_/_/_/_/_/_/_/_/ -->
<configuration>
  <property resource="fortress_env.properties" />
  <property resource="fortress_env_${lasta.env}.properties" />
  <property name="domain.name" value="fortress"/>
  <property name="log.level" value="${log.level:-debug}"/>
  <property name="log.pattern" value="%d [%t] %-5p \\(%C{0}@%M\\(\\):%L\\) - %m%n"/>
  <property name="log.file.basedir" value="${log.file.basedir:-/tmp/lastaflute/undefinedbasedir}"/>
  <property name="log.file.encoding" value="UTF-8"/>
  <property name="backup.date.suffix" value="_%d{yyyyMMdd}"/>
  <property name="backup.max.history" value="180"/>

  <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
    <encoder><charset>${log.file.encoding}</charset><pattern>${log.pattern}</pattern></encoder>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter"><level>${log.console.level}</level></filter>
  </appender>
  <appender name="appfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <File>${log.file.basedir}/app_${domain.name}.log</File>
    <Append>true</Append>
    <encoder><charset>${log.file.encoding}</charset><pattern>${log.pattern}</pattern></encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${log.file.basedir}/backup/app_${domain.name}${backup.date.suffix}.log</fileNamePattern>
      <maxHistory>${backup.max.history}</maxHistory>
    </rollingPolicy>
  </appender>
  <appender name="jobuniquefile" class="ch.qos.logback.classic.sift.SiftingAppender"> <!-- log files per job -->
    <discriminator class="org.docksidestage.bizfw.logback.LogbackJobUniqueDiscriminator">
      <defaultValue>unknown</defaultValue> <!-- basically unused because of job unique filter -->
    </discriminator>
    <filter class="org.docksidestage.bizfw.logback.LogbackJobUniqueFilter" /> <!-- selects only job thread -->
    <sift>
      <appender name="job_${job.unique}_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.file.basedir}/job_${domain.name}_${job.unique}.log</File>
        <Append>true</Append>
        <encoder><charset>${log.file.encoding}</charset><pattern>${log.pattern}</pattern></encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
          <fileNamePattern>${log.file.basedir}/backup/job_${domain.name}_${job.unique}${backup.date.suffix}.log</fileNamePattern>
          <maxHistory>${backup.max.history}</maxHistory>
        </rollingPolicy>
      </appender>
    </sift>
  </appender>
  <appender name="errorfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <File>${log.file.basedir}/error_${domain.name}.log</File>
    <Append>true</Append>
    <encoder><charset>${log.file.encoding}</charset><pattern>${log.pattern}</pattern></encoder>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter"><level>ERROR</level></filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${log.file.basedir}/backup/error_${domain.name}${backup.date.suffix}.log</fileNamePattern>
      <maxHistory>${backup.max.history}</maxHistory>
    </rollingPolicy>
  </appender>
  <appender name="mailfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <File>${log.file.basedir}/mail_${domain.name}.log</File>
    <Append>true</Append>
    <encoder><charset>${log.file.encoding}</charset><pattern>${log.pattern}</pattern></encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${log.file.basedir}/backup/mail_${domain.name}${backup.date.suffix}.log</fileNamePattern>
      <maxHistory>${backup.max.history}</maxHistory>
    </rollingPolicy>
  </appender>
  <appender name="inoutfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <File>${log.file.basedir}/inout_${domain.name}.log</File>
    <Append>true</Append>
    <encoder><charset>${log.file.encoding}</charset><pattern>${log.pattern}</pattern></encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${log.file.basedir}/backup/inout_${domain.name}${backup.date.suffix}.log</fileNamePattern>
      <maxHistory>${backup.max.history}</maxHistory>
    </rollingPolicy>
  </appender>
  <appender name="remoteapifile" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <File>${log.file.basedir}/remoteapi_${domain.name}.log</File>
    <Append>true</Append>
    <encoder><charset>${log.file.encoding}</charset><pattern>${log.pattern}</pattern></encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${log.file.basedir}/backup/remoteapi_${domain.name}${backup.date.suffix}.log</fileNamePattern>
      <maxHistory>${backup.max.history}</maxHistory>
    </rollingPolicy>
  </appender>

  <logger name="org.dbflute" additivity="false" level="${log.level}">
    <appender-ref ref="console"/><appender-ref ref="appfile"/><appender-ref ref="jobuniquefile"/><appender-ref ref="errorfile"/>
  </logger>
  <logger name="org.lastaflute" additivity="false" level="${log.level}">
    <appender-ref ref="console"/><appender-ref ref="appfile"/><appender-ref ref="jobuniquefile"/><appender-ref ref="errorfile"/>
  </logger>
  <logger name="org.docksidestage" additivity="false" level="${log.level}">
    <appender-ref ref="console"/><appender-ref ref="appfile"/><appender-ref ref="jobuniquefile"/><appender-ref ref="errorfile"/>
  </logger>
  <logger name="mailflute.sending" additivity="false" level="${log.level}">
    <appender-ref ref="mailfile"/>
  </logger>
  <logger name="lastaflute.inout" additivity="false" level="${log.level}">
    <appender-ref ref="inoutfile"/>
  </logger>
  <logger name="lastaflute.remoteapi.sendreceive" additivity="false" level="${log.level}">
    <appender-ref ref="remoteapifile"/>
  </logger>
  <root level="error">
    <appender-ref ref="console"/><appender-ref ref="errorfile"/>
  </root>
</configuration>
