{
  "swagger": "2.0",
  "info": {
    "title": "Fortress",
    "description": "Fortress. generated by lasta-doc",
    "version": "1.0.0"
  },
  "schemes": [
    "http"
  ],
  "basePath": "/fortress/",
  "tags": [
    {
      "name": "lido"
    }
  ],
  "paths": {
    "/lido/following/list": {
      "post": {
        "summary": "@author jflute",
        "description": "@author jflute",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "limit",
            "type": "integer",
            "format": "int32",
            "in": "formData",
            "required": true
          },
          {
            "name": "memberPrefix",
            "type": "string",
            "minLength": 0,
            "maxLength": 7,
            "in": "formData",
            "required": false
          },
          {
            "name": "fromPurchasePrice",
            "type": "integer",
            "format": "int32",
            "in": "formData",
            "required": false
          },
          {
            "name": "livesChiba",
            "type": "boolean",
            "in": "formData",
            "required": false
          }
        ],
        "tags": [
          "lido"
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/org.docksidestage.app.web.lido.following.FollowingSearchResult"
            }
          },
          "400": {
            "description": "client error"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "parameters": [
        {
          "in": "header",
          "type": "string",
          "required": true,
          "name": "hangar",
          "default": "mystic"
        }
      ]
    },
    "/lido/following/register": {
      "post": {
        "summary": "@author jflute",
        "description": "@author jflute",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "FollowingUpdateBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/org.docksidestage.app.web.lido.following.FollowingUpdateBody"
            }
          }
        ],
        "tags": [
          "lido"
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/org.docksidestage.app.web.lido.following.FollowingUpdateResult"
            }
          },
          "400": {
            "description": "client error"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "parameters": [
        {
          "in": "header",
          "type": "string",
          "required": true,
          "name": "hangar",
          "default": "mystic"
        }
      ]
    },
    "/lido/following/delete": {
      "post": {
        "summary": "@author jflute",
        "description": "@author jflute",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "FollowingUpdateBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/org.docksidestage.app.web.lido.following.FollowingUpdateBody"
            }
          }
        ],
        "tags": [
          "lido"
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/org.docksidestage.app.web.lido.following.FollowingUpdateResult"
            }
          },
          "400": {
            "description": "client error"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "parameters": [
        {
          "in": "header",
          "type": "string",
          "required": true,
          "name": "hangar",
          "default": "mystic"
        }
      ]
    },
    "/lido/product/price/update/{productId}": {
      "post": {
        "summary": "@author jflute",
        "description": "@author jflute",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productId",
            "type": "integer",
            "format": "int32",
            "in": "path",
            "required": true
          },
          {
            "name": "ProductPriceUpdateBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/org.docksidestage.app.web.lido.product.price.ProductPriceUpdateBody"
            }
          }
        ],
        "tags": [
          "lido"
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "client error"
          }
        }
      },
      "parameters": [
        {
          "in": "header",
          "type": "string",
          "required": true,
          "name": "hangar",
          "default": "mystic"
        }
      ]
    }
  },
  "definitions": {
    "org.docksidestage.app.web.lido.following.FollowingSearchResult$FollowingMemberPart": {
      "type": "object",
      "required": [
        "member_id",
        "member_name",
        "member_status_code"
      ],
      "properties": {
        "member_id": {
          "type": "integer",
          "format": "int32"
        },
        "member_name": {
          "type": "string"
        },
        "member_status_code": {
          "type": "string",
          "enum": [
            "FML",
            "WDL",
            "PRV"
          ],
          "description": "member_status_code: * `FML` - Formalized, Formalized. * `WDL` - Withdrawal, Withdrawal. * `PRV` - Provisional, Provisional.",
          "example": "FML"
        }
      }
    },
    "org.docksidestage.app.web.lido.following.FollowingSearchResult$FollowerMemberPart": {
      "type": "object",
      "required": [
        "member_id",
        "member_name",
        "member_status_code"
      ],
      "properties": {
        "member_id": {
          "type": "integer",
          "format": "int32"
        },
        "member_name": {
          "type": "string"
        },
        "member_status_code": {
          "type": "string",
          "enum": [
            "FML",
            "WDL",
            "PRV"
          ],
          "description": "member_status_code: * `FML` - Formalized, Formalized. * `WDL` - Withdrawal, Withdrawal. * `PRV` - Provisional, Provisional.",
          "example": "FML"
        }
      }
    },
    "org.docksidestage.app.web.lido.following.FollowingSearchResult": {
      "type": "object",
      "required": [
        "followings",
        "followers"
      ],
      "properties": {
        "followings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/org.docksidestage.app.web.lido.following.FollowingSearchResult%24FollowingMemberPart"
          }
        },
        "followers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/org.docksidestage.app.web.lido.following.FollowingSearchResult%24FollowerMemberPart"
          }
        }
      }
    },
    "org.docksidestage.app.web.lido.following.FollowingUpdateBody": {
      "type": "object",
      "required": [
        "my_member_id",
        "your_member_id"
      ],
      "properties": {
        "my_member_id": {
          "type": "integer",
          "format": "int32"
        },
        "your_member_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "org.docksidestage.app.web.lido.following.FollowingUpdateResult": {
      "type": "object",
      "required": [
        "following_count"
      ],
      "properties": {
        "following_count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "org.docksidestage.app.web.lido.product.price.ProductPriceUpdateBody": {
      "type": "object",
      "required": [
        "regular_price"
      ],
      "properties": {
        "regular_price": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}